# query ExploreContinuousRentalAuctions($first: Int, $skip: Int) {
#   # this one is coming from uniswap-v2
#   continuousRentalAuctions(first: $first, skip: $skip) {
#     id
#     address
#     controllerObserverImplementation
#     controllerObserver
#     acceptedToken
#     # beneficiary
#     # minimumBidFactorWad
#     # reserveRate
#     inboundStreams(first: 1, orderBy: flowRate, orderDirection: desc) {
#       sender
#       flowRate
#     }
#   }
# }

# todo: we don't need all this info
query ExploreRentalAuctions {
  genericRentalAuctions(orderBy: lastInteractionTimestamp, orderDirection: desc) {
    acceptedToken
    address
    beneficiary
    controllerObserver {
      address
      auctionAddress
      id
      implementation
      underlyingTokenContract
      underlyingTokenID
      underlyingTokenName
      underlyingTokenURI
      owner
    }
    controllerObserverImplementation
    currentRenter
    id
    minimumBidFactorWad
    reserveRate
    topBid
    type
    paused
    lastInteractionTimestamp
  }
}

# todo: remove other RentalAuctions queries
query RentalAuctions($where: GenericRentalAuction_filter) {
  genericRentalAuctions(where: $where) {
    acceptedToken
    address
    beneficiary
    controllerObserver {
      address
      auctionAddress
      id
      implementation
      underlyingTokenContract
      underlyingTokenID
      underlyingTokenName
      underlyingTokenURI
      owner
    }
    controllerObserverImplementation
    currentRenter
    id
    minimumBidFactorWad
    reserveRate
    topBid
    type
    paused
    lastInteractionTimestamp
  }
}

query ERC721ControllerObserversByOwner($owner: Bytes!) {
  erc721ControllerObservers(where: {owner: $owner}) {
    address
    auctionAddress
    id
    implementation
    underlyingTokenContract
    underlyingTokenID
    underlyingTokenName
    underlyingTokenURI
    owner
    genericRentalAuction {
      acceptedToken
      address
      beneficiary
      controllerObserverImplementation
      currentRenter
      id
      minimumBidFactorWad
      reserveRate
      topBid
      type
      paused
      lastInteractionTimestamp
    }
  }
}

query RentalAuctionByAddress($address: Bytes!) {
  genericRentalAuctions(where: {address: $address}) {
    acceptedToken
    address
    beneficiary
    controllerObserver {
      address
      auctionAddress
      id
      implementation
      underlyingTokenContract
      underlyingTokenID
      underlyingTokenName
      underlyingTokenURI
      owner
    }
    controllerObserverImplementation
    currentRenter
    id
    minimumBidFactorWad
    reserveRate
    topBid
    type
    paused
    lastInteractionTimestamp
  }
}

query ContinuousRentalAuctionByAddress($address: Bytes) {
  continuousRentalAuctions(where: {address: $address}) {
    id
    address
    inboundStreams {
      id
      sender
      receiver
      flowRate
    }
  }
}

query EnglishRentalAuctionsByAddress($address: Bytes) {
  englishRentalAuctions(where: {address: $address}) {
    id
    address
    minRentalDuration
    maxRentalDuration
    biddingPhaseDuration
    biddingPhaseExtensionDuration
    topBidder
    depositClaimed
    isBiddingPhase
    currentPhaseEndTime
  }
}

query BlockNumber {
  _meta {
    block {
      number
    }
  }
}